{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\IT\\\\moje_projekty\\\\to-do_list\\\\pages\\\\calendar.js\";\nimport { Fragment, useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport AllTask from '../components/task/AllTask';\nimport { MongoClient } from 'mongodb';\n\nfunction MyCalendar(props) {\n  const router = useRouter();\n\n  async function addTaskHandler(enteredTaskData) {\n    const response = await fetch('/api/new-task', {\n      method: 'POST',\n      body: JSON.stringify(enteredTaskData),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n    router.push('/');\n  }\n\n  const {\n    0: chosenDate,\n    1: setChosenDate\n  } = useState(new Date());\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Calendar, {\n      value: chosenDate,\n      onChange: setChosenDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AllTask, {\n      tasks: props.tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n/*\r\n//zamina na getServerSideProps\r\nexport async function getServerSideProps(context) {\r\n    \r\n\r\n    const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n  \r\n    const taskCollection = db.collection('tasks');\r\n    const tasks = await taskCollection.find({start_date: chosenDate}).toArray();\r\n  \r\n    client.close()\r\n  \r\n    return {\r\n      props: {\r\n        tasks: tasks.map((task) => ({\r\n          title: task.title,\r\n          priority: task.priority,\r\n          start_date: task.start_date || null,\r\n          complete: task.complete || null,\r\n          id: task._id.toString(),\r\n        })),\r\n      }, \r\n      revalidate: 1\r\n    }\r\n  \r\n  }\r\n\r\n*/\n\n\nexport default MyCalendar;","map":{"version":3,"sources":["D:/IT/moje_projekty/to-do_list/pages/calendar.js"],"names":["Fragment","useState","useEffect","Calendar","AllTask","MongoClient","MyCalendar","props","router","useRouter","addTaskHandler","enteredTaskData","response","fetch","method","body","JSON","stringify","headers","data","json","console","log","push","chosenDate","setChosenDate","Date","tasks"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,kCAAP;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAAQC,WAAR,QAA0B,SAA1B;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AAExB,QAAMC,MAAM,GAAGC,SAAS,EAAxB;;AAEE,iBAAeC,cAAf,CAA8BC,eAA9B,EAA+C;AAC5C,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAD,EAAkB;AACzCC,MAAAA,MAAM,EAAE,MADiC;AAEzCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,eAAf,CAFmC;AAGzCO,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAHgC,KAAlB,CAA5B;AAQC,UAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEAX,IAAAA,MAAM,CAACe,IAAP,CAAY,GAAZ;AACH;;AAEA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BxB,QAAQ,CAAC,IAAIyB,IAAJ,EAAD,CAA5C;AAED,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEF,UAAjB;AAA6B,MAAA,QAAQ,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAElB,KAAK,CAACoB;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAerB,UAAf","sourcesContent":["import { Fragment, useState, useEffect } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport AllTask from '../components/task/AllTask';\r\nimport {MongoClient} from 'mongodb'\r\n\r\n\r\nfunction MyCalendar(props){\r\n\r\n  const router = useRouter();\r\n\r\n    async function addTaskHandler(enteredTaskData) {\r\n       const response = await fetch('/api/new-task', {\r\n            method: 'POST',\r\n            body: JSON.stringify(enteredTaskData),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n\r\n        const data = await response.json();\r\n        console.log(data);\r\n    \r\n        router.push('/')\r\n    }\r\n\r\n     const [chosenDate, setChosenDate] = useState(new Date());\r\n\r\n    return (\r\n        <Fragment>\r\n            <Calendar value={chosenDate} onChange={setChosenDate}/>\r\n            <AllTask tasks={props.tasks}/>\r\n        </Fragment>\r\n        \r\n    )\r\n}\r\n/*\r\n//zamina na getServerSideProps\r\nexport async function getServerSideProps(context) {\r\n    \r\n\r\n    const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n  \r\n    const taskCollection = db.collection('tasks');\r\n    const tasks = await taskCollection.find({start_date: chosenDate}).toArray();\r\n  \r\n    client.close()\r\n  \r\n    return {\r\n      props: {\r\n        tasks: tasks.map((task) => ({\r\n          title: task.title,\r\n          priority: task.priority,\r\n          start_date: task.start_date || null,\r\n          complete: task.complete || null,\r\n          id: task._id.toString(),\r\n        })),\r\n      }, \r\n      revalidate: 1\r\n    }\r\n  \r\n  }\r\n\r\n*/\r\nexport default MyCalendar;"]},"metadata":{},"sourceType":"module"}