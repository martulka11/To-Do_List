{"ast":null,"code":"import _regeneratorRuntime from \"D:/IT/moje_projekty/to-do_list/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"D:/IT/moje_projekty/to-do_list/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\IT\\\\moje_projekty\\\\to-do_list\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from \"react\";\nimport AllTask from \"../components/task/AllTask\";\n\nfunction Home(props) {\n  _s();\n\n  var router = useRouter();\n\n  function deleteTaskHandler(_x) {\n    return _deleteTaskHandler.apply(this, arguments);\n  }\n\n  function _deleteTaskHandler() {\n    _deleteTaskHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(enteredTaskData) {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"/api/helper\", {\n                method: \"DELETE\",\n                body: JSON.stringify(enteredTaskData),\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              data = _context.sent;\n              console.log(data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _deleteTaskHandler.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AllTask, {\n      tasks: props.tasks,\n      onDeleteTask: deleteTaskHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", true);\n\n_c = Home;\nexport var __N_SSG = true;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/IT/moje_projekty/to-do_list/pages/index.js"],"names":["Fragment","AllTask","Home","props","router","useRouter","deleteTaskHandler","enteredTaskData","fetch","method","body","JSON","stringify","headers","response","json","data","console","log","tasks"],"mappings":";;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,4BAApB;;AAIA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,MAAMC,MAAM,GAAGC,SAAS,EAAxB;;AADmB,WAGJC,iBAHI;AAAA;AAAA;;AAAA;AAAA,kFAGnB,iBAAiCC,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACyBC,KAAK,CAAC,aAAD,EAAgB;AAC1CC,gBAAAA,MAAM,EAAE,QADkC;AAE1CC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,eAAf,CAFoC;AAG1CM,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT;AAHiC,eAAhB,CAD9B;;AAAA;AACQC,cAAAA,QADR;AAAA;AAAA,qBASqBA,QAAQ,CAACC,IAAT,EATrB;;AAAA;AASQC,cAAAA,IATR;AAUEC,cAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHmB;AAAA;AAAA;;AAiBnB,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEb,KAAK,CAACgB,KAAtB;AAA6B,MAAA,YAAY,EAAEb;AAA3C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAtBQJ,I;;KAAAA,I;;AAuDT,eAAeA,IAAf","sourcesContent":["import { Fragment } from \"react\";\nimport AllTask from \"../components/task/AllTask\";\nimport { MongoClient } from \"mongodb\";\n\n\nfunction Home(props) {\n  const router = useRouter();\n\n  async function deleteTaskHandler(enteredTaskData) {\n    const response = await fetch(\"/api/helper\", {\n      method: \"DELETE\",\n      body: JSON.stringify(enteredTaskData),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    const data = await response.json();\n    console.log(data);\n\n  }\n\n  return (\n    <Fragment>\n      <AllTask tasks={props.tasks} onDeleteTask={deleteTaskHandler} />\n    </Fragment>\n  );\n}\n\nexport async function getStaticProps() {\n  let client;\n\n  try {\n    client = await MongoClient.connect(\n      \"mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority\"\n    );\n  } catch (error) {\n    res.status(500).json({ message: \"Could not connect to database\" });\n    return;\n  }\n  const db = client.db();\n\n  const taskCollection = db.collection(\"tasks\");\n  const tasks = await taskCollection.find().toArray();\n\n  client.close();\n\n  return {\n    props: {\n      tasks: tasks.map((task) => ({\n        title: task.title,\n        priority: task.priority,\n        start_date: task.start_date || null,\n        complete: task.complete || null,\n        id: task._id.toString(),\n      })),\n    },\n    revalidate: 1,\n  };\n}\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}