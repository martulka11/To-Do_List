{"ast":null,"code":"import { MongoClient, ObjectId } from 'mongodb';\n\nasync function handler(req, res) {\n  if (req.method === 'POST') {\n    const data = req.body;\n    const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\n    const db = client.db();\n    const tasksCollection = db.collection('tasks');\n    const result = await tasksCollection.insertOne(data);\n    console.log(result);\n    client.close();\n    res.status(201).json({\n      message: 'Task inserted'\n    }); //nalezy dodac obsulge bledow jesli polaczenie nie powiodlo sie \n  }\n\n  if (req.method === 'PUT') {\n    const data = req.body;\n    const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\n    const db = client.db();\n    const tasksCollection = db.collection('tasks');\n    const result = tasksCollection.updateOne({\n      _id: new ObjectId(data.id)\n    }, {\n      $set: {\n        complete: false\n      }\n    });\n    console.log(result);\n    client.close();\n    res.status(201).json({\n      message: 'Task updated'\n    });\n  }\n\n  if (req.method === 'GET') {\n    const data = req.body;\n    const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\n    const db = client.db();\n    const tasksCollection = db.collection('tasks');\n    const result = tasksCollection.find({\n      start_data: data.start_data\n    });\n    console.log(result);\n    client.close();\n    res.status(201).json({\n      message: 'Task updated'\n    });\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["D:/IT/moje_projekty/to-do_list/pages/api/new-task.js"],"names":["MongoClient","ObjectId","handler","req","res","method","data","body","client","connect","db","tasksCollection","collection","result","insertOne","console","log","close","status","json","message","updateOne","_id","id","$set","complete","find","start_data"],"mappings":"AACA,SAAQA,WAAR,EAAqBC,QAArB,QAAoC,SAApC;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAgC;AAC5B,MAAGD,GAAG,CAACE,MAAJ,KAAe,MAAlB,EAAyB;AACrB,UAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB;AAEA,UAAMC,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CAAoB,8FAApB,CAArB;AACA,UAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,UAAMC,eAAe,GAAGD,EAAE,CAACE,UAAH,CAAc,OAAd,CAAxB;AAEA,UAAMC,MAAM,GAAG,MAAMF,eAAe,CAACG,SAAhB,CAA0BR,IAA1B,CAArB;AAEAS,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AAEAL,IAAAA,MAAM,CAACS,KAAP;AAEAb,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,MAAAA,OAAO,EAAE;AAAV,KAArB,EAdqB,CAgBrB;AACH;;AACD,MAAGjB,GAAG,CAACE,MAAJ,KAAe,KAAlB,EAAyB;AACrB,UAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB;AAEA,UAAMC,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CAAoB,8FAApB,CAArB;AACA,UAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,UAAMC,eAAe,GAAGD,EAAE,CAACE,UAAH,CAAc,OAAd,CAAxB;AAEA,UAAMC,MAAM,GAAGF,eAAe,CAACU,SAAhB,CAA0B;AAACC,MAAAA,GAAG,EAAE,IAAIrB,QAAJ,CAAaK,IAAI,CAACiB,EAAlB;AAAN,KAA1B,EAAwD;AAACC,MAAAA,IAAI,EAAE;AAACC,QAAAA,QAAQ,EAAE;AAAX;AAAP,KAAxD,CAAf;AAEAV,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AAEAL,IAAAA,MAAM,CAACS,KAAP;AAEAb,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,MAAAA,OAAO,EAAE;AAAV,KAArB;AAEH;;AAED,MAAGjB,GAAG,CAACE,MAAJ,KAAe,KAAlB,EAAyB;AACrB,UAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB;AAEA,UAAMC,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CAAoB,8FAApB,CAArB;AACA,UAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,UAAMC,eAAe,GAAGD,EAAE,CAACE,UAAH,CAAc,OAAd,CAAxB;AAEA,UAAMC,MAAM,GAAGF,eAAe,CAACe,IAAhB,CAAqB;AAACC,MAAAA,UAAU,EAAErB,IAAI,CAACqB;AAAlB,KAArB,CAAf;AAEAZ,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AAEAL,IAAAA,MAAM,CAACS,KAAP;AAEAb,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,MAAAA,OAAO,EAAE;AAAV,KAArB;AAEH;AAEJ;;AAED,eAAelB,OAAf","sourcesContent":["\nimport {MongoClient, ObjectId} from 'mongodb';\n\nasync function handler(req, res){\n    if(req.method === 'POST'){\n        const data = req.body;\n\n        const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\n        const db = client.db();\n\n        const tasksCollection = db.collection('tasks');\n\n        const result = await tasksCollection.insertOne(data);\n\n        console.log(result)\n\n        client.close();\n\n        res.status(201).json({message: 'Task inserted'});\n\n        //nalezy dodac obsulge bledow jesli polaczenie nie powiodlo sie \n    }\n    if(req.method === 'PUT') {\n        const data = req.body;\n        \n        const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\n        const db = client.db();\n\n        const tasksCollection = db.collection('tasks');\n\n        const result = tasksCollection.updateOne({_id: new ObjectId(data.id)}, {$set: {complete: false}});\n\n        console.log(result)\n\n        client.close();\n\n        res.status(201).json({message: 'Task updated'});\n\n    }\n    \n    if(req.method === 'GET') {\n        const data = req.body;\n        \n        const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\n        const db = client.db();\n\n        const tasksCollection = db.collection('tasks');\n\n        const result = tasksCollection.find({start_data: data.start_data});\n\n        console.log(result)\n\n        client.close();\n\n        res.status(201).json({message: 'Task updated'});\n\n    }\n\n}\n\nexport default handler;"]},"metadata":{},"sourceType":"module"}