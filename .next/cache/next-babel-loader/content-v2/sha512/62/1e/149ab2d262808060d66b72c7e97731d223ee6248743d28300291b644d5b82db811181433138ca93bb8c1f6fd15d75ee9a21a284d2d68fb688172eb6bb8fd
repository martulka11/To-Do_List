{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\IT\\\\moje_projekty\\\\to-do_list\\\\pages\\\\tasks-in-progress.js\",\n    _this = this;\n\nimport { Fragment } from \"react\";\nimport AllTask from \"../components/task/AllTask\";\n\nvar TasksInProgress = function TasksInProgress(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AllTask, {\n      tasks: props.tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = TasksInProgress;\nexport var __N_SSG = true;\nexport default TasksInProgress;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksInProgress\");","map":{"version":3,"sources":["D:/IT/moje_projekty/to-do_list/pages/tasks-in-progress.js"],"names":["Fragment","AllTask","TasksInProgress","props","tasks"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,OAAP,MAAoB,4BAApB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAEjC,sBACE,QAAC,QAAD;AAAA,2BACA,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEA,KAAK,CAACC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,WADF;AAMD,CARD;;KAAMF,e;;AAuCN,eAAeA,eAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport {MongoClient} from 'mongodb'\r\nimport AllTask from \"../components/task/AllTask\";\r\n\r\nconst TasksInProgress = (props) => {\r\n\r\n  return (\r\n    <Fragment>\r\n    <AllTask tasks={props.tasks}/>\r\n  </Fragment>\r\n    \r\n  )\r\n}\r\n\r\n\r\nexport async function getStaticProps() {\r\n    \r\n    const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n  \r\n    const taskCollection = db.collection('tasks');\r\n    const tasks = await taskCollection.find({complete: false}).toArray();\r\n  \r\n    client.close()\r\n  \r\n    return {\r\n      props: {\r\n        tasks: tasks.map((task) => ({\r\n          title: task.title,\r\n          priority: task.priority,\r\n          start_date: task.start_date || null,\r\n          complete: task.complete || null,\r\n          id: task._id.toString(),\r\n        })),\r\n      }, \r\n      revalidate: 1\r\n    }\r\n  \r\n  }\r\n\r\n\r\n\r\n\r\nexport default TasksInProgress;"]},"metadata":{},"sourceType":"module"}