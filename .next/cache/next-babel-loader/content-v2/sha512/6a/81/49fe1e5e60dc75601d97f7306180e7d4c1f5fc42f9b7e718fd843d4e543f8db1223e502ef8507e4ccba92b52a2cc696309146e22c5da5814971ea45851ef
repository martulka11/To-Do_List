{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\IT\\\\moje_projekty\\\\to-do_list\\\\pages\\\\index.js\";\nimport { Fragment } from \"react\";\nimport AllTask from \"../components/task/AllTask\";\n\nfunction Home(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AllTask, {\n      tasks: props.tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Home;\nexport var __N_SSG = true;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/IT/moje_projekty/to-do_list/pages/index.js"],"names":["Fragment","AllTask","Home","props","tasks"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,4BAApB;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAKnB,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEA,KAAK,CAACC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KAVQF,I;;AA2CT,eAAeA,IAAf","sourcesContent":["import { Fragment } from \"react\";\nimport AllTask from \"../components/task/AllTask\";\nimport { MongoClient } from \"mongodb\";\n\nfunction Home(props) {\n\n\n  \n\n  return (\n    <Fragment>\n      <AllTask tasks={props.tasks} />\n    </Fragment>\n  );\n}\n\nexport async function getStaticProps() {\n  let client;\n\n  try {\n    client = await MongoClient.connect(\n      \"mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority\"\n    );\n  } catch (error) {\n    res.status(500).json({ message: \"Could not connect to database\" });\n    return;\n  }\n  const db = client.db();\n\n  const taskCollection = db.collection(\"tasks\");\n  const tasks = await taskCollection.find().toArray();\n\n  client.close();\n\n  return {\n    props: {\n      tasks: tasks.map((task) => ({\n        title: task.title,\n        priority: task.priority,\n        start_date: task.start_date || null,\n        complete: task.complete || null,\n        id: task._id.toString(),\n      })),\n    },\n    revalidate: 1,\n  };\n}\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}