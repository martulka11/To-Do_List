{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\IT\\\\moje_projekty\\\\to-do_list\\\\pages\\\\ended-task.js\";\nimport { Fragment } from \"react\";\nconst TASKDATA = [{\n  id: 'm1',\n  title: 'A First Meetup',\n  priority: 'high priority',\n  start_date: \"22-01-2022\",\n  complete: false,\n  description: 'This is a first meetup!'\n}, {\n  id: 'm2',\n  title: 'A Second Meetup',\n  priority: 'high priority',\n  start_date: \"22-01-2022\",\n  complete: false,\n  description: 'This is a second meetup!'\n}];\n\nconst EndedTask = () => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EndedTask, {\n      tasks: props.tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticProps() {\n  /*\r\n    const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n  \r\n    const taskCollection = db.collection('tasks');\r\n    const tasks = await taskCollection.find().toArray();\r\n  \r\n    client.close()\r\n  */\n  return {\n    props: {\n      tasks: TASKDATA\n    }\n  };\n}\nexport default EndedTask;","map":{"version":3,"sources":["D:/IT/moje_projekty/to-do_list/pages/ended-task.js"],"names":["Fragment","TASKDATA","id","title","priority","start_date","complete","description","EndedTask","props","tasks","getStaticProps"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,MAAMC,QAAQ,GAAG,CACb;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,QAAQ,EACN,eAJJ;AAKEC,EAAAA,UAAU,EAAE,YALd;AAMEC,EAAAA,QAAQ,EAAE,KANZ;AAOEC,EAAAA,WAAW,EAAE;AAPf,CADa,EAUb;AACEL,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,QAAQ,EACN,eAJJ;AAKEC,EAAAA,UAAU,EAAE,YALd;AAMEC,EAAAA,QAAQ,EAAE,KANZ;AAOEC,EAAAA,WAAW,EAAE;AAPf,CAVa,CAAjB;;AAqBA,MAAMC,SAAS,GAAG,MAAM;AAEtB,sBACE,QAAC,QAAD;AAAA,2BACA,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEC,KAAK,CAACC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CARD;;AAWA,OAAO,eAAeC,cAAf,GAAgC;AACnC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,SAAO;AACLF,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAET;AADF;AADF,GAAP;AAMD;AAEL,eAAeO,SAAf","sourcesContent":["import { Fragment } from \"react\";\r\n\r\nconst TASKDATA = [\r\n    {\r\n      id: 'm1',\r\n      title: 'A First Meetup',\r\n      priority:\r\n        'high priority',\r\n      start_date: \"22-01-2022\",\r\n      complete: false,\r\n      description: 'This is a first meetup!',\r\n    },\r\n    {\r\n      id: 'm2',\r\n      title: 'A Second Meetup',\r\n      priority:\r\n        'high priority',\r\n      start_date: \"22-01-2022\",\r\n      complete: false,\r\n      description: 'This is a second meetup!',\r\n    },\r\n];\r\n\r\nconst EndedTask = () => {\r\n\r\n  return (\r\n    <Fragment>\r\n    <EndedTask tasks={props.tasks}/>\r\n  </Fragment>\r\n    \r\n  )\r\n}\r\n\r\n\r\nexport async function getStaticProps() {\r\n    /*\r\n      const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\r\n      const db = client.db();\r\n    \r\n      const taskCollection = db.collection('tasks');\r\n      const tasks = await taskCollection.find().toArray();\r\n    \r\n      client.close()\r\n    */\r\n      return {\r\n        props: {\r\n          tasks: TASKDATA\r\n        }, \r\n      }\r\n    \r\n    }\r\n\r\nexport default EndedTask"]},"metadata":{},"sourceType":"module"}