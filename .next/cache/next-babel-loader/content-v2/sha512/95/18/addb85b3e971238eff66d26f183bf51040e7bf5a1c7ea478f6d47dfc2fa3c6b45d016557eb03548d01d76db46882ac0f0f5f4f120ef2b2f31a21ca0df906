{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\IT\\\\moje_projekty\\\\to-do_list\\\\components\\\\task\\\\TaskDetails.js\";\nimport classes from './TaskDetils.module.css';\nimport { useRouter } from 'next/router'; //import {MongoClient} from 'mongodb';\n\nconst TaskDetail = props => {\n  /* const router = useRouter();\r\n   const { taskId }  = router.query;\r\n   \r\n   async function finishHandler() {\r\n         const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\r\n       const db = client.db();\r\n         const taskCollection = db.collection('tasks');\r\n       const tasks = await taskCollection.updateOne({_id: taskId }, {complete: true}).toArray();\r\n         //findAndModify({})\r\n         client.close()\r\n         return {\r\n           props: {\r\n           tasks: tasks.map((task) => ({\r\n               title: task.title,\r\n               priority: task.priority,\r\n               start_date: task.start_date || null,\r\n               complete: task.complete || null,\r\n               id: task._id.toString(),\r\n           })),\r\n       }\r\n         }\r\n     }\r\n  */\n  const router = useRouter();\n  const {\n    taskId\n  } = router.query;\n  console.log(props.title);\n\n  function finishHandler() {\n    const data = {\n      title: props.title,\n      priority: props.priority,\n      start_date: props.date,\n      complete: props.complete,\n      description: enteredDescription\n    };\n    props.updatedTaskHandler(data);\n  }\n\n  function getComplete(props) {\n    if (props.complete === true) {\n      return './check.png';\n    }\n\n    return './work-in-progress.png';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.priority\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.start_date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: getComplete(props),\n      alt: \"icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.button,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: finishHandler,\n        children: \"Finish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\nexport default TaskDetail;","map":{"version":3,"sources":["D:/IT/moje_projekty/to-do_list/components/task/TaskDetails.js"],"names":["classes","useRouter","TaskDetail","props","router","taskId","query","console","log","title","finishHandler","data","priority","start_date","date","complete","description","enteredDescription","updatedTaskHandler","getComplete","container","button"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,yBAApB;AACA,SAAQC,SAAR,QAAwB,aAAxB,C,CACA;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAE3B;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUQ,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAcD,MAAM,CAACE,KAA3B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACM,KAAlB;;AAEA,WAASC,aAAT,GAAyB;AAEzB,UAAMC,IAAI,GAAG;AACTF,MAAAA,KAAK,EAAEN,KAAK,CAACM,KADJ;AAETG,MAAAA,QAAQ,EAAET,KAAK,CAACS,QAFP;AAGTC,MAAAA,UAAU,EAAEV,KAAK,CAACW,IAHT;AAITC,MAAAA,QAAQ,EAAEZ,KAAK,CAACY,QAJP;AAKTC,MAAAA,WAAW,EAAEC;AALJ,KAAb;AASAd,IAAAA,KAAK,CAACe,kBAAN,CAAyBP,IAAzB;AACH;;AAGD,WAASQ,WAAT,CAAqBhB,KAArB,EAA2B;AACvB,QAAGA,KAAK,CAACY,QAAN,KAAmB,IAAtB,EAA2B;AACvB,aAAO,aAAP;AACH;;AACD,WAAO,wBAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAEf,OAAO,CAACoB,SAAxB;AAAA,4BACI;AAAA,gBAAKjB,KAAK,CAACM;AAAX;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKN,KAAK,CAACS;AAAX;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAAKT,KAAK,CAACU;AAAX;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAK,MAAA,GAAG,EAAEM,WAAW,CAAChB,KAAD,CAArB;AAA8B,MAAA,GAAG,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA,gBAAIA,KAAK,CAACa;AAAV;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAK,MAAA,SAAS,EAAEhB,OAAO,CAACqB,MAAxB;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAEX,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAzED;;AA6EA,eAAeR,UAAf","sourcesContent":["import classes from './TaskDetils.module.css';\r\nimport {useRouter} from 'next/router';\r\n//import {MongoClient} from 'mongodb';\r\n\r\nconst TaskDetail = (props) => {\r\n\r\n   /* const router = useRouter();\r\n    const { taskId }  = router.query;\r\n    \r\n    async function finishHandler() {\r\n\r\n        const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\r\n        const db = client.db();\r\n\r\n        const taskCollection = db.collection('tasks');\r\n        const tasks = await taskCollection.updateOne({_id: taskId }, {complete: true}).toArray();\r\n\r\n        //findAndModify({})\r\n\r\n        client.close()\r\n\r\n        return {\r\n            props: {\r\n            tasks: tasks.map((task) => ({\r\n                title: task.title,\r\n                priority: task.priority,\r\n                start_date: task.start_date || null,\r\n                complete: task.complete || null,\r\n                id: task._id.toString(),\r\n            })),\r\n        }\r\n\r\n        }\r\n\r\n    }\r\n*/\r\n\r\n\r\n        const router = useRouter();\r\n        const { taskId }  = router.query;\r\n\r\n        console.log(props.title)\r\n\r\n        function finishHandler() {\r\n\r\n        const data = {\r\n            title: props.title,\r\n            priority: props.priority,\r\n            start_date: props.date,\r\n            complete: props.complete,\r\n            description: enteredDescription,\r\n\r\n        };\r\n\r\n        props.updatedTaskHandler(data)\r\n    }\r\n\r\n    \r\n    function getComplete(props){\r\n        if(props.complete === true){\r\n            return './check.png'\r\n        }\r\n        return './work-in-progress.png'\r\n    }\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <h1>{props.title}</h1>\r\n            <h3>{props.priority}</h3>\r\n            <h3>{props.start_date}</h3>\r\n            <img src={getComplete(props)} alt='icon'/>\r\n            <p>{props.description}</p>\r\n            <div className={classes.button}>\r\n                <button onClick={finishHandler}>Finish</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default TaskDetail;"]},"metadata":{},"sourceType":"module"}