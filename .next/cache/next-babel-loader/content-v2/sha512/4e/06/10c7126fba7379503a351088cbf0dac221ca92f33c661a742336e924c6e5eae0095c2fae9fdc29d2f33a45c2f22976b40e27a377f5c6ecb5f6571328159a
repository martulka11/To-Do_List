{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\IT\\\\moje_projekty\\\\to-do_list\\\\components\\\\task\\\\TaskDetails.js\",\n    _this = this;\n\nimport classes from './TaskDetils.module.css'; //import {useRouter} from 'next/router';\n//import {MongoClient} from 'mongodb';\n\nvar TaskDetail = function TaskDetail(props) {\n  /* const router = useRouter();\r\n   const { taskId }  = router.query;\r\n   \r\n   async function finishHandler() {\r\n         const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\r\n       const db = client.db();\r\n         const taskCollection = db.collection('tasks');\r\n       const tasks = await taskCollection.updateOne({_id: taskId }, {complete: true}).toArray();\r\n         //findAndModify({})\r\n         client.close()\r\n         return {\r\n           props: {\r\n           tasks: tasks.map((task) => ({\r\n               title: task.title,\r\n               priority: task.priority,\r\n               start_date: task.start_date || null,\r\n               complete: task.complete || null,\r\n               id: task._id.toString(),\r\n           })),\r\n       }\r\n         }\r\n     }\r\n  */\n  function finishHandler(event) {\n    event.cu;\n    props.updatedTaskHandler(updatedData);\n  }\n\n  function getComplete(props) {\n    if (props.complete === true) {\n      return './check.png';\n    }\n\n    return './work-in-progress.png';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.priority\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.start_date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: getComplete(props),\n      alt: \"icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.button,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: finishHandler,\n        children: \"Finish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = TaskDetail;\nexport default TaskDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskDetail\");","map":{"version":3,"sources":["D:/IT/moje_projekty/to-do_list/components/task/TaskDetails.js"],"names":["classes","TaskDetail","props","finishHandler","event","cu","updatedTaskHandler","updatedData","getComplete","complete","container","title","priority","start_date","description","button"],"mappings":";;;;;AAAA,OAAOA,OAAP,MAAoB,yBAApB,C,CACA;AACA;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAE3B;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASI,WAASC,aAAT,CAAwBC,KAAxB,EAA+B;AAC3BA,IAAAA,KAAK,CAACC,EAAN;AAEAH,IAAAA,KAAK,CAACI,kBAAN,CAAyBC,WAAzB;AACH;;AAGD,WAASC,WAAT,CAAqBN,KAArB,EAA2B;AACvB,QAAGA,KAAK,CAACO,QAAN,KAAmB,IAAtB,EAA2B;AACvB,aAAO,aAAP;AACH;;AACD,WAAO,wBAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAET,OAAO,CAACU,SAAxB;AAAA,4BACI;AAAA,gBAAKR,KAAK,CAACS;AAAX;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAA,gBAAKT,KAAK,CAACU;AAAX;AAAA;AAAA;AAAA;AAAA,aAFJ,eAGI;AAAA,gBAAKV,KAAK,CAACW;AAAX;AAAA;AAAA;AAAA;AAAA,aAHJ,eAII;AAAK,MAAA,GAAG,EAAEL,WAAW,CAACN,KAAD,CAArB;AAA8B,MAAA,GAAG,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,aAJJ,eAKI;AAAA,gBAAIA,KAAK,CAACY;AAAV;AAAA;AAAA;AAAA;AAAA,aALJ,eAMI;AAAK,MAAA,SAAS,EAAEd,OAAO,CAACe,MAAxB;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAEZ,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aANJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAYH,CA3DD;;KAAMF,U;AA+DN,eAAeA,UAAf","sourcesContent":["import classes from './TaskDetils.module.css';\r\n//import {useRouter} from 'next/router';\r\n//import {MongoClient} from 'mongodb';\r\n\r\nconst TaskDetail = (props) => {\r\n\r\n   /* const router = useRouter();\r\n    const { taskId }  = router.query;\r\n    \r\n    async function finishHandler() {\r\n\r\n        const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\r\n        const db = client.db();\r\n\r\n        const taskCollection = db.collection('tasks');\r\n        const tasks = await taskCollection.updateOne({_id: taskId }, {complete: true}).toArray();\r\n\r\n        //findAndModify({})\r\n\r\n        client.close()\r\n\r\n        return {\r\n            props: {\r\n            tasks: tasks.map((task) => ({\r\n                title: task.title,\r\n                priority: task.priority,\r\n                start_date: task.start_date || null,\r\n                complete: task.complete || null,\r\n                id: task._id.toString(),\r\n            })),\r\n        }\r\n\r\n        }\r\n\r\n    }\r\n*/\r\n\r\n    function finishHandler (event) {\r\n        event.cu\r\n\r\n        props.updatedTaskHandler(updatedData)\r\n    }\r\n\r\n    \r\n    function getComplete(props){\r\n        if(props.complete === true){\r\n            return './check.png'\r\n        }\r\n        return './work-in-progress.png'\r\n    }\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <h1>{props.title}</h1>\r\n            <h3>{props.priority}</h3>\r\n            <h3>{props.start_date}</h3>\r\n            <img src={getComplete(props)} alt='icon'/>\r\n            <p>{props.description}</p>\r\n            <div className={classes.button}>\r\n                <button onClick={finishHandler}>Finish</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default TaskDetail;"]},"metadata":{},"sourceType":"module"}