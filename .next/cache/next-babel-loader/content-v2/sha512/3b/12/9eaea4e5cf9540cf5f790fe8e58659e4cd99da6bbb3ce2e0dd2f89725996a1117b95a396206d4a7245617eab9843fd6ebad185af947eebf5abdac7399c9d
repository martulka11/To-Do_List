{"ast":null,"code":"import _regeneratorRuntime from \"D:/IT/moje_projekty/to-do_list/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/IT/moje_projekty/to-do_list/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar Database = function Database(findTasks) {\n  function getStaticProps() {\n    return _getStaticProps.apply(this, arguments);\n  }\n\n  function _getStaticProps() {\n    _getStaticProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var client, db, taskCollection, tasks;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\n\n            case 2:\n              client = _context.sent;\n              db = client.db();\n              taskCollection = db.collection('tasks');\n              _context.next = 7;\n              return taskCollection.find(findTasks).toArray();\n\n            case 7:\n              tasks = _context.sent;\n              client.close();\n              return _context.abrupt(\"return\", {\n                props: {\n                  tasks: tasks.map(function (task) {\n                    return {\n                      title: task.title,\n                      priority: task.priority,\n                      start_date: task.start_date || null,\n                      complete: task.complete || null,\n                      id: task._id.toString()\n                    };\n                  })\n                },\n                revalidate: 1\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getStaticProps.apply(this, arguments);\n  }\n};\n\n_c = Database;\nexport default Database;\n\nvar _c;\n\n$RefreshReg$(_c, \"Database\");","map":{"version":3,"sources":["D:/IT/moje_projekty/to-do_list/components/Database.js"],"names":["Database","findTasks","getStaticProps","MongoClient","connect","client","db","taskCollection","collection","find","toArray","tasks","close","props","map","task","title","priority","start_date","complete","id","_id","toString","revalidate"],"mappings":";;;AACA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,SAAD,EAAe;AAAA,WAEjBC,cAFiB;AAAA;AAAA;;AAAA;AAAA,+EAEhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEyBC,WAAW,CAACC,OAAZ,CAAoB,8FAApB,CAFzB;;AAAA;AAEUC,cAAAA,MAFV;AAGUC,cAAAA,EAHV,GAGeD,MAAM,CAACC,EAAP,EAHf;AAKUC,cAAAA,cALV,GAK2BD,EAAE,CAACE,UAAH,CAAc,OAAd,CAL3B;AAAA;AAAA,qBAOwBD,cAAc,CAACE,IAAf,CAAoBR,SAApB,EAA+BS,OAA/B,EAPxB;;AAAA;AAOUC,cAAAA,KAPV;AASIN,cAAAA,MAAM,CAACO,KAAP;AATJ,+CAWW;AACLC,gBAAAA,KAAK,EAAE;AACLF,kBAAAA,KAAK,EAAEA,KAAK,CAACG,GAAN,CAAU,UAACC,IAAD;AAAA,2BAAW;AAC1BC,sBAAAA,KAAK,EAAED,IAAI,CAACC,KADc;AAE1BC,sBAAAA,QAAQ,EAAEF,IAAI,CAACE,QAFW;AAG1BC,sBAAAA,UAAU,EAAEH,IAAI,CAACG,UAAL,IAAmB,IAHL;AAI1BC,sBAAAA,QAAQ,EAAEJ,IAAI,CAACI,QAAL,IAAiB,IAJD;AAK1BC,sBAAAA,EAAE,EAAEL,IAAI,CAACM,GAAL,CAASC,QAAT;AALsB,qBAAX;AAAA,mBAAV;AADF,iBADF;AAULC,gBAAAA,UAAU,EAAE;AAVP,eAXX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFgC;AAAA;AAAA;AA4B/B,CA5BD;;KAAMvB,Q;AA6BN,eAAeA,QAAf","sourcesContent":["\r\nconst Database = (findTasks) => {\r\n\r\nasync function getStaticProps() {\r\n    \r\n    const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n  \r\n    const taskCollection = db.collection('tasks');\r\n\r\n    const tasks = await taskCollection.find(findTasks).toArray();\r\n  \r\n    client.close()\r\n  \r\n    return {\r\n      props: {\r\n        tasks: tasks.map((task) => ({\r\n          title: task.title,\r\n          priority: task.priority,\r\n          start_date: task.start_date || null,\r\n          complete: task.complete || null,\r\n          id: task._id.toString(),\r\n        })),\r\n      }, \r\n      revalidate: 1\r\n    }\r\n  \r\n  }\r\n\r\n}\r\nexport default Database;"]},"metadata":{},"sourceType":"module"}