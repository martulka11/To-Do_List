{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\IT\\\\moje_projekty\\\\to-do_list\\\\pages\\\\index.js\";\nimport Head from 'next/head';\nimport { Fragment } from 'react';\nimport AllTask from '../components/task/AllTask';\nimport { MongoClient } from 'mongodb';\nconst TASKDATA = [{\n  id: 'm1',\n  task: 'A First Meetup',\n  priority: 'high priority',\n  status: false,\n  description: 'This is a first meetup!'\n}, {\n  id: 'm2',\n  task: 'A Second Meetup',\n  priority: 'high priority',\n  status: false,\n  description: 'This is a second meetup!'\n}];\nexport default function Home(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"to-do list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Generated by create next app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AllTask, {\n      tasks: props.tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\nexport async function getStaticProps() {\n  /*\n    const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\n    const db = client.db();\n  \n    const taskCollection = db.collection('tasks');\n    const tasks = await taskCollection.find().toArray();\n  \n    client.close()\n  */\n  return {\n    props: {\n      tasks: TASKDATA\n    },\n    revalidate: 1\n  };\n}\n/*\n      props: {\n          meetups: meetups.map((meetup) => ({\n              title: meetup.title,\n              address: meetup.address,\n              image: meetup.image,\n              id: meetup._id.toString(),\n            })),\n      },\n      revalidate: 1\n  }\n}*/","map":{"version":3,"sources":["D:/IT/moje_projekty/to-do_list/pages/index.js"],"names":["Head","Fragment","AllTask","MongoClient","TASKDATA","id","task","priority","status","description","Home","props","tasks","getStaticProps","revalidate"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAAQC,WAAR,QAA0B,SAA1B;AAEA,MAAMC,QAAQ,GAAG,CACb;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,gBAFR;AAGEC,EAAAA,QAAQ,EACN,eAJJ;AAKEC,EAAAA,MAAM,EAAE,KALV;AAMEC,EAAAA,WAAW,EAAE;AANf,CADa,EASb;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,iBAFR;AAGEC,EAAAA,QAAQ,EACN,eAJJ;AAKEC,EAAAA,MAAM,EAAE,KALV;AAMEC,EAAAA,WAAW,EAAE;AANf,CATa,CAAjB;AAmBA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAClC,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAM,QAAA,GAAG,EAAC,MAAV;AAAiB,QAAA,IAAI,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEA,KAAK,CAACC;AAAtB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;AAED,OAAO,eAAeC,cAAf,GAAgC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,SAAO;AACLF,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAER;AADF,KADF;AAILU,IAAAA,UAAU,EAAE;AAJP,GAAP;AAOD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Head from 'next/head'\nimport { Fragment } from 'react'\nimport AllTask from '../components/task/AllTask';\nimport {MongoClient} from 'mongodb';\n\nconst TASKDATA = [\n    {\n      id: 'm1',\n      task: 'A First Meetup',\n      priority:\n        'high priority',\n      status: false,\n      description: 'This is a first meetup!',\n    },\n    {\n      id: 'm2',\n      task: 'A Second Meetup',\n      priority:\n        'high priority',\n      status: false,\n      description: 'This is a second meetup!',\n    },\n]\n\nexport default function Home(props) {\n  return (\n    <Fragment>\n      <Head>\n        <title>to-do list</title>\n        <meta name=\"description\" content=\"Generated by create next app\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n      <AllTask tasks={props.tasks}/>\n    </Fragment>\n      \n\n  )\n}\n\nexport async function getStaticProps() {\n/*\n  const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\n  const db = client.db();\n\n  const taskCollection = db.collection('tasks');\n  const tasks = await taskCollection.find().toArray();\n\n  client.close()\n*/\n  return {\n    props: {\n      tasks: TASKDATA\n    }, \n    revalidate: 1\n  }\n\n}\n\n/*\n      props: {\n          meetups: meetups.map((meetup) => ({\n              title: meetup.title,\n              address: meetup.address,\n              image: meetup.image,\n              id: meetup._id.toString(),\n            })),\n      },\n      revalidate: 1\n  }\n}*/\n\n"]},"metadata":{},"sourceType":"module"}