{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\IT\\\\moje_projekty\\\\to-do_list\\\\pages\\\\[taskId]\\\\index.js\";\nimport TaskDetails from '../../components/task/TaskDetails';\n\nconst TaskDetail = props => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(TaskDetails, {\n      title: \"First Meetup\",\n      priority: \"high priority\",\n      status: \"Some Street 5, Some City\",\n      description: \"This is a first meetup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n/*\r\nexport async function getStaticPaths(){\r\n    const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const tasksCollection = db.collection('tasks');\r\n    const tasks = await tasksCollection.find({}, {_id: 1}).toArray();\r\n\r\n    client.close();\r\n\r\n    return{\r\n        fallback: false,\r\n        paths: tasks.map((task) => ({\r\n            params: {taskId: task._id.toString()},\r\n        }))\r\n    };\r\n}\r\n\r\n\r\nexport async function getStaticProps(context) {\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const tasksCollection = db.collection('tasks');\r\n    const selectedTask = await tasksCollection.findOne({_id: ObjectId(taskId)});\r\n\r\n    client.close();\r\n\r\n    return {\r\n        props: {\r\n            taskData: {\r\n                id: selectedTask._id.toString(),\r\n                title: selectedTask.title,\r\n                priority: selectedTask.priority,\r\n                status: selectedTask.status,\r\n                description: selectedTask.description,\r\n            }\r\n        }\r\n    }\r\n}\r\n*/\n\n\nexport default TaskDetail;","map":{"version":3,"sources":["D:/IT/moje_projekty/to-do_list/pages/[taskId]/index.js"],"names":["TaskDetails","TaskDetail","props","classes","container"],"mappings":";;AAAA,OAAOA,WAAP,MAAwB,mCAAxB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAE1B,sBACI;AAAS,IAAA,SAAS,EAAEC,OAAO,CAACC,SAA5B;AAAA,2BACI,QAAC,WAAD;AACA,MAAA,KAAK,EAAC,cADN;AAEA,MAAA,QAAQ,EAAC,eAFT;AAGA,MAAA,MAAM,EAAC,0BAHP;AAIA,MAAA,WAAW,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAbD;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeH,UAAf","sourcesContent":["import TaskDetails from '../../components/task/TaskDetails';\r\n\r\nconst TaskDetail = (props) => {\r\n\r\n    return(\r\n        <section className={classes.container}>\r\n            <TaskDetails\r\n            title='First Meetup'\r\n            priority='high priority'\r\n            status='Some Street 5, Some City'\r\n            description='This is a first meetup'\r\n        />\r\n        </section>\r\n        \r\n    );\r\n}\r\n\r\n/*\r\nexport async function getStaticPaths(){\r\n    const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const tasksCollection = db.collection('tasks');\r\n    const tasks = await tasksCollection.find({}, {_id: 1}).toArray();\r\n\r\n    client.close();\r\n\r\n    return{\r\n        fallback: false,\r\n        paths: tasks.map((task) => ({\r\n            params: {taskId: task._id.toString()},\r\n        }))\r\n    };\r\n}\r\n\r\n\r\nexport async function getStaticProps(context) {\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const tasksCollection = db.collection('tasks');\r\n    const selectedTask = await tasksCollection.findOne({_id: ObjectId(taskId)});\r\n\r\n    client.close();\r\n\r\n    return {\r\n        props: {\r\n            taskData: {\r\n                id: selectedTask._id.toString(),\r\n                title: selectedTask.title,\r\n                priority: selectedTask.priority,\r\n                status: selectedTask.status,\r\n                description: selectedTask.description,\r\n            }\r\n        }\r\n    }\r\n}\r\n*/\r\n\r\nexport default TaskDetail;"]},"metadata":{},"sourceType":"module"}