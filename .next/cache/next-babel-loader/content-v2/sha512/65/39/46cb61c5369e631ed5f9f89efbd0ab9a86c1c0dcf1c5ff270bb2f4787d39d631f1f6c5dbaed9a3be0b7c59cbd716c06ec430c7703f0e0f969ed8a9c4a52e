{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\IT\\\\moje_projekty\\\\to-do_list\\\\pages\\\\[taskId]\\\\index.js\",\n    _this = this;\n\nimport TaskDetails from '../../components/task/TaskDetails';\n\nvar TaskDetail = function TaskDetail(props) {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container-details\",\n    children: /*#__PURE__*/_jsxDEV(TaskDetails, {\n      title: props.taskData.title,\n      priority: props.taskData.priority,\n      start_date: props.taskData.start_date,\n      complete: props.taskData.complete,\n      description: props.taskData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = TaskDetail;\nexport var __N_SSG = true;\nexport default TaskDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskDetail\");","map":{"version":3,"sources":["D:/IT/moje_projekty/to-do_list/pages/[taskId]/index.js"],"names":["TaskDetails","TaskDetail","props","taskData","title","priority","start_date","complete","description"],"mappings":";;;;;AAAA,OAAOA,WAAP,MAAwB,mCAAxB;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAG1B,sBACI;AAAS,IAAA,SAAS,EAAC,mBAAnB;AAAA,2BACI,QAAC,WAAD;AACA,MAAA,KAAK,EAAEA,KAAK,CAACC,QAAN,CAAeC,KADtB;AAEA,MAAA,QAAQ,EAAEF,KAAK,CAACC,QAAN,CAAeE,QAFzB;AAGA,MAAA,UAAU,EAAEH,KAAK,CAACC,QAAN,CAAeG,UAH3B;AAIA,MAAA,QAAQ,EAAEJ,KAAK,CAACC,QAAN,CAAeI,QAJzB;AAKA,MAAA,WAAW,EAAEL,KAAK,CAACC,QAAN,CAAeK;AAL5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAYH,CAfD;;KAAMP,U;;AA0EN,eAAeA,UAAf","sourcesContent":["import TaskDetails from '../../components/task/TaskDetails';\r\nimport { MongoClient, ObjectId } from 'mongodb';\r\n\r\nconst TaskDetail = (props) => {\r\n\r\n\r\n    return(\r\n        <section className='container-details'>\r\n            <TaskDetails\r\n            title={props.taskData.title}\r\n            priority={props.taskData.priority}\r\n            start_date={props.taskData.start_date}\r\n            complete={props.taskData.complete}\r\n            description={props.taskData.description}\r\n        />\r\n        </section>\r\n        \r\n    );\r\n}\r\n\r\n\r\nexport async function getStaticPaths(){\r\n    const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const tasksCollection = db.collection('tasks');\r\n    const tasks = await tasksCollection.find({}, {_id: 1}).toArray();\r\n\r\n    client.close();\r\n\r\n\r\n    return{\r\n        fallback: 'blocking',\r\n        paths: tasks.map((task) => ({\r\n            params: {\r\n                taskId: task._id.toString()\r\n            },\r\n        }))\r\n    \r\n    };\r\n}\r\n\r\n\r\nexport async function getStaticProps(context) {\r\n\r\n    const taskId = context.params.taskId;\r\n\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const tasksCollection = db.collection('tasks');\r\n    const selectedTask = await tasksCollection.findOne({_id: ObjectId(taskId)});\r\n\r\n    \r\n    if(!tasks){\r\n        return {notFound: true};\r\n    }\r\n\r\n    client.close();\r\n\r\n\r\n    return {\r\n        props: {\r\n            taskData: {\r\n                id: selectedTask._id.toString(),\r\n                title: selectedTask.title,\r\n                priority: selectedTask.priority,\r\n                start_date: selectedTask.start_date || null,\r\n                complete: selectedTask.complete || null,\r\n                description: selectedTask.description,\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default TaskDetail;"]},"metadata":{},"sourceType":"module"}