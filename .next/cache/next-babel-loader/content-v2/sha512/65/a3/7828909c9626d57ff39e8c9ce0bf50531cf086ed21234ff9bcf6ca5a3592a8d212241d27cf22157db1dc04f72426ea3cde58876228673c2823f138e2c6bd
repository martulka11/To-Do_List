{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\IT\\\\moje_projekty\\\\to-do_list\\\\pages\\\\[taskId]\\\\index.js\";\nimport TaskDetails from '../../components/task/TaskDetails';\nimport { MongoClient, ObjectId } from 'mongodb';\n\nconst TaskDetail = props => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container-details\",\n    children: /*#__PURE__*/_jsxDEV(TaskDetails, {\n      title: props.taskData.title,\n      priority: props.taskData.priority,\n      start_date: props.taskData.start_date,\n      complete: props.taskData.complete,\n      description: props.taskData.description,\n      onClick: updateTaskHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\n  const db = client.db();\n  const tasksCollection = db.collection('tasks');\n  const tasks = await tasksCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: 'blocking',\n    paths: tasks.map(task => ({\n      params: {\n        taskId: task._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const taskId = context.params.taskId;\n  const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\n  const db = client.db();\n  const tasksCollection = db.collection('tasks');\n  const selectedTask = await tasksCollection.findOne({\n    _id: ObjectId(taskId)\n  });\n  client.close();\n  return {\n    props: {\n      taskData: {\n        id: selectedTask._id.toString(),\n        title: selectedTask.title,\n        priority: selectedTask.priority,\n        start_date: selectedTask.start_date || null,\n        complete: selectedTask.complete || null,\n        description: selectedTask.description\n      }\n    }\n  };\n}\nexport default TaskDetail;","map":{"version":3,"sources":["D:/IT/moje_projekty/to-do_list/pages/[taskId]/index.js"],"names":["TaskDetails","MongoClient","ObjectId","TaskDetail","props","taskData","title","priority","start_date","complete","description","updateTaskHandler","getStaticPaths","client","connect","db","tasksCollection","collection","tasks","find","_id","toArray","close","fallback","paths","map","task","params","taskId","toString","getStaticProps","context","selectedTask","findOne","id"],"mappings":";;AAAA,OAAOA,WAAP,MAAwB,mCAAxB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAG1B,sBACI;AAAS,IAAA,SAAS,EAAC,mBAAnB;AAAA,2BACI,QAAC,WAAD;AACA,MAAA,KAAK,EAAEA,KAAK,CAACC,QAAN,CAAeC,KADtB;AAEA,MAAA,QAAQ,EAAEF,KAAK,CAACC,QAAN,CAAeE,QAFzB;AAGA,MAAA,UAAU,EAAEH,KAAK,CAACC,QAAN,CAAeG,UAH3B;AAIA,MAAA,QAAQ,EAAEJ,KAAK,CAACC,QAAN,CAAeI,QAJzB;AAKA,MAAA,WAAW,EAAEL,KAAK,CAACC,QAAN,CAAeK,WAL5B;AAMA,MAAA,OAAO,EAAEC;AANT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAhBD;;AAmBA,OAAO,eAAeC,cAAf,GAA+B;AAClC,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoB,8FAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,eAAe,GAAGD,EAAE,CAACE,UAAH,CAAc,OAAd,CAAxB;AACA,QAAMC,KAAK,GAAG,MAAMF,eAAe,CAACG,IAAhB,CAAqB,EAArB,EAAyB;AAACC,IAAAA,GAAG,EAAE;AAAN,GAAzB,EAAmCC,OAAnC,EAApB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAM;AACFC,IAAAA,QAAQ,EAAE,UADR;AAEFC,IAAAA,KAAK,EAAEN,KAAK,CAACO,GAAN,CAAWC,IAAD,KAAW;AACxBC,MAAAA,MAAM,EAAE;AACJC,QAAAA,MAAM,EAAEF,IAAI,CAACN,GAAL,CAASS,QAAT;AADJ;AADgB,KAAX,CAAV;AAFL,GAAN;AASH;AAGD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAE1C,QAAMH,MAAM,GAAGG,OAAO,CAACJ,MAAR,CAAeC,MAA9B;AAGA,QAAMf,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoB,8FAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,eAAe,GAAGD,EAAE,CAACE,UAAH,CAAc,OAAd,CAAxB;AACA,QAAMe,YAAY,GAAG,MAAMhB,eAAe,CAACiB,OAAhB,CAAwB;AAACb,IAAAA,GAAG,EAAElB,QAAQ,CAAC0B,MAAD;AAAd,GAAxB,CAA3B;AAGAf,EAAAA,MAAM,CAACS,KAAP;AAGA,SAAO;AACHlB,IAAAA,KAAK,EAAE;AACHC,MAAAA,QAAQ,EAAE;AACN6B,QAAAA,EAAE,EAAEF,YAAY,CAACZ,GAAb,CAAiBS,QAAjB,EADE;AAENvB,QAAAA,KAAK,EAAE0B,YAAY,CAAC1B,KAFd;AAGNC,QAAAA,QAAQ,EAAEyB,YAAY,CAACzB,QAHjB;AAINC,QAAAA,UAAU,EAAEwB,YAAY,CAACxB,UAAb,IAA2B,IAJjC;AAKNC,QAAAA,QAAQ,EAAEuB,YAAY,CAACvB,QAAb,IAAyB,IAL7B;AAMNC,QAAAA,WAAW,EAAEsB,YAAY,CAACtB;AANpB;AADP;AADJ,GAAP;AAYH;AAGD,eAAeP,UAAf","sourcesContent":["import TaskDetails from '../../components/task/TaskDetails';\r\nimport { MongoClient, ObjectId } from 'mongodb';\r\n\r\nconst TaskDetail = (props) => {\r\n\r\n\r\n    return(\r\n        <section className='container-details'>\r\n            <TaskDetails\r\n            title={props.taskData.title}\r\n            priority={props.taskData.priority}\r\n            start_date={props.taskData.start_date}\r\n            complete={props.taskData.complete}\r\n            description={props.taskData.description}\r\n            onClick={updateTaskHandler}\r\n        />\r\n        </section>\r\n        \r\n    );\r\n}\r\n\r\n\r\nexport async function getStaticPaths(){\r\n    const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const tasksCollection = db.collection('tasks');\r\n    const tasks = await tasksCollection.find({}, {_id: 1}).toArray();\r\n\r\n    client.close();\r\n\r\n    return{\r\n        fallback: 'blocking',\r\n        paths: tasks.map((task) => ({\r\n            params: {\r\n                taskId: task._id.toString()\r\n            },\r\n        }))\r\n    \r\n    };\r\n}\r\n\r\n\r\nexport async function getStaticProps(context) {\r\n\r\n    const taskId = context.params.taskId;\r\n\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const tasksCollection = db.collection('tasks');\r\n    const selectedTask = await tasksCollection.findOne({_id: ObjectId(taskId)});\r\n\r\n\r\n    client.close();\r\n\r\n\r\n    return {\r\n        props: {\r\n            taskData: {\r\n                id: selectedTask._id.toString(),\r\n                title: selectedTask.title,\r\n                priority: selectedTask.priority,\r\n                start_date: selectedTask.start_date || null,\r\n                complete: selectedTask.complete || null,\r\n                description: selectedTask.description,\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default TaskDetail;"]},"metadata":{},"sourceType":"module"}