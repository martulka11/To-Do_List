{"ast":null,"code":"import { MongoClient, ObjectId } from \"mongodb\";\n\nasync function handler(req, res) {\n  if (req.method === \"POST\") {\n    const data = req.body;\n    let client;\n\n    try {\n      client = await MongoClient.connect(\"mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority\");\n    } catch (error) {\n      res.status(500).json({\n        message: \"Could not connect to database\"\n      });\n      return;\n    }\n\n    const db = client.db();\n    const tasksCollection = db.collection(\"tasks\");\n    const result = await tasksCollection.insertOne(data);\n    client.close();\n    res.status(201).json({\n      message: \"Task inserted\"\n    });\n  } else if (req.method === \"PUT\") {\n    const data = req.body;\n    let client;\n\n    try {\n      client = await MongoClient.connect(\"mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority\");\n    } catch (error) {\n      res.status(500).json({\n        message: \"Could not connect to database\"\n      });\n      return;\n    }\n\n    const db = client.db();\n    const tasksCollection = db.collection(\"tasks\");\n    const result = await tasksCollection.updateOne({\n      _id: ObjectId(data.id)\n    }, {\n      $set: {\n        complete: true\n      }\n    });\n    client.close();\n    res.status(201).json({\n      message: \"Task updated\"\n    });\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["D:/IT/moje_projekty/to-do_list/pages/api/helper.js"],"names":["MongoClient","ObjectId","handler","req","res","method","data","body","client","connect","error","status","json","message","db","tasksCollection","collection","result","insertOne","close","updateOne","_id","id","$set","complete"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,UAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB;AAEA,QAAIC,MAAJ;;AAEA,QAAI;AACFA,MAAAA,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CACb,8FADa,CAAf;AAGD,KAJD,CAIE,OAAOC,KAAP,EAAc;AACdN,MAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB;AACA;AACD;;AAED,UAAMC,EAAE,GAAGN,MAAM,CAACM,EAAP,EAAX;AAEA,UAAMC,eAAe,GAAGD,EAAE,CAACE,UAAH,CAAc,OAAd,CAAxB;AAEA,UAAMC,MAAM,GAAG,MAAMF,eAAe,CAACG,SAAhB,CAA0BZ,IAA1B,CAArB;AAEAE,IAAAA,MAAM,CAACW,KAAP;AAEAf,IAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB;AACD,GAvBD,MAuBO,IAAIV,GAAG,CAACE,MAAJ,KAAe,KAAnB,EAA0B;AAC/B,UAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB;AAEA,QAAIC,MAAJ;;AAEA,QAAI;AACFA,MAAAA,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CACb,8FADa,CAAf;AAGD,KAJD,CAIE,OAAOC,KAAP,EAAc;AACdN,MAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB;AACA;AACD;;AAED,UAAMC,EAAE,GAAGN,MAAM,CAACM,EAAP,EAAX;AAEA,UAAMC,eAAe,GAAGD,EAAE,CAACE,UAAH,CAAc,OAAd,CAAxB;AAEA,UAAMC,MAAM,GAAG,MAAMF,eAAe,CAACK,SAAhB,CACnB;AAAEC,MAAAA,GAAG,EAAEpB,QAAQ,CAACK,IAAI,CAACgB,EAAN;AAAf,KADmB,EAEnB;AAAEC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ;AAAR,KAFmB,CAArB;AAKAhB,IAAAA,MAAM,CAACW,KAAP;AAEAf,IAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB;AACD;AACF;;AAED,eAAeX,OAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\n\nasync function handler(req, res) {\n  if (req.method === \"POST\") {\n    const data = req.body;\n\n    let client;\n\n    try {\n      client = await MongoClient.connect(\n        \"mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority\"\n      );\n    } catch (error) {\n      res.status(500).json({ message: \"Could not connect to database\" });\n      return;\n    }\n\n    const db = client.db();\n\n    const tasksCollection = db.collection(\"tasks\");\n\n    const result = await tasksCollection.insertOne(data);\n\n    client.close();\n\n    res.status(201).json({ message: \"Task inserted\" });\n  } else if (req.method === \"PUT\") {\n    const data = req.body;\n\n    let client;\n\n    try {\n      client = await MongoClient.connect(\n        \"mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority\"\n      );\n    } catch (error) {\n      res.status(500).json({ message: \"Could not connect to database\" });\n      return;\n    }\n\n    const db = client.db();\n\n    const tasksCollection = db.collection(\"tasks\");\n\n    const result = await tasksCollection.updateOne(\n      { _id: ObjectId(data.id) },\n      { $set: { complete: true } }\n    );\n\n    client.close();\n\n    res.status(201).json({ message: \"Task updated\" });\n  }\n}\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}