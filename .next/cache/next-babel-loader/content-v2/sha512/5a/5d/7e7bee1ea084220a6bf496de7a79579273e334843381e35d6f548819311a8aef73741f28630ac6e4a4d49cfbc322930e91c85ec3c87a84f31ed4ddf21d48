{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\IT\\\\moje_projekty\\\\to-do_list\\\\pages\\\\index.js\";\nimport Head from 'next/head';\nimport { Fragment } from 'react';\nimport AllTask from '../components/task/AllTask'; //import {MongoClient} from 'mongodb';\n\nconst TASKDATA = [{\n  id: 'm1',\n  title: 'A First Meetup',\n  priority: 'high priority',\n  start_date: \"22-01-2022\",\n  status: 'false',\n  description: 'This is a first meetup!'\n}, {\n  id: 'm2',\n  title: 'A Second Meetup',\n  priority: 'high priority',\n  start_date: \"22-01-2022\",\n  status: 'false',\n  description: 'This is a second meetup!'\n}];\n\nfunction Home(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AllTask, {\n      tasks: props.tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticProps() {\n  /*\n    const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\n    const db = client.db();\n  \n    const taskCollection = db.collection('tasks');\n    const tasks = await taskCollection.find().toArray();\n  \n    client.close()\n  */\n  return {\n    props: {\n      tasks: TASKDATA\n    }\n  };\n}\nexport default Home;\n/*\n<Head>\n        <title>to-do list</title>\n        <meta name=\"description\" content=\"Generated by create next app\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n      props: {\n          meetups: meetups.map((meetup) => ({\n              title: meetup.title,\n              address: meetup.address,\n              image: meetup.image,\n              id: meetup._id.toString(),\n            })),\n      },\n      revalidate: 1\n  }\n}*/","map":{"version":3,"sources":["D:/IT/moje_projekty/to-do_list/pages/index.js"],"names":["Head","Fragment","AllTask","TASKDATA","id","title","priority","start_date","status","description","Home","props","tasks","getStaticProps"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,4BAApB,C,CACA;;AAEA,MAAMC,QAAQ,GAAG,CACb;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,QAAQ,EACN,eAJJ;AAKIC,EAAAA,UAAU,EAAE,YALhB;AAOEC,EAAAA,MAAM,EAAE,OAPV;AAQEC,EAAAA,WAAW,EAAE;AARf,CADa,EAWb;AACEL,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,QAAQ,EACN,eAJJ;AAKEC,EAAAA,UAAU,EAAE,YALd;AAMEC,EAAAA,MAAM,EAAE,OANV;AAOEC,EAAAA,WAAW,EAAE;AAPf,CAXa,CAAjB;;AAsBA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEA,KAAK,CAACC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,SAAO;AACLF,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAET;AADF;AADF,GAAP;AAMD;AACD,eAAeO,IAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Head from 'next/head'\nimport { Fragment } from 'react'\nimport AllTask from '../components/task/AllTask';\n//import {MongoClient} from 'mongodb';\n\nconst TASKDATA = [\n    {\n      id: 'm1',\n      title: 'A First Meetup',\n      priority:\n        'high priority',\n        start_date: \"22-01-2022\",\n\n      status: 'false',\n      description: 'This is a first meetup!',\n    },\n    {\n      id: 'm2',\n      title: 'A Second Meetup',\n      priority:\n        'high priority',\n      start_date: \"22-01-2022\",\n      status: 'false',\n      description: 'This is a second meetup!',\n    },\n];\n\nfunction Home(props) {\n  return (\n    <Fragment>\n      <AllTask tasks={props.tasks}/>\n    </Fragment>\n      \n\n  )\n}\n\nexport async function getStaticProps() {\n/*\n  const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\n  const db = client.db();\n\n  const taskCollection = db.collection('tasks');\n  const tasks = await taskCollection.find().toArray();\n\n  client.close()\n*/\n  return {\n    props: {\n      tasks: TASKDATA\n    }, \n  }\n\n}\nexport default Home;\n\n/*\n<Head>\n        <title>to-do list</title>\n        <meta name=\"description\" content=\"Generated by create next app\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n      props: {\n          meetups: meetups.map((meetup) => ({\n              title: meetup.title,\n              address: meetup.address,\n              image: meetup.image,\n              id: meetup._id.toString(),\n            })),\n      },\n      revalidate: 1\n  }\n}*/\n\n"]},"metadata":{},"sourceType":"module"}