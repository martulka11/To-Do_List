{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\IT\\\\moje_projekty\\\\to-do_list\\\\pages\\\\calendar.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport AllTask from '../components/task/AllTask';\n\nfunction MyCalendar(props) {\n  _s();\n\n  var _useState = useState(new Date()),\n      chosenDate = _useState[0],\n      setChosenDate = _useState[1];\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Calendar, {\n      value: chosenDate,\n      onChange: setChosenDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AllTask, {\n      tasks: props.tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n} //zamina na getServerSideProps\n\n\n_s(MyCalendar, \"QFhBaf8bhwHvwH1GwhAlzMii7As=\");\n\n_c = MyCalendar;\nexport var __N_SSG = true;\nexport default MyCalendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyCalendar\");","map":{"version":3,"sources":["D:/IT/moje_projekty/to-do_list/pages/calendar.js"],"names":["Fragment","useState","Calendar","AllTask","MyCalendar","props","Date","chosenDate","setChosenDate","tasks"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,kCAAP;AACA,OAAOC,OAAP,MAAoB,4BAApB;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AAAA;;AAAA,kBACeJ,QAAQ,CAAC,IAAIK,IAAJ,EAAD,CADvB;AAAA,MACdC,UADc;AAAA,MACFC,aADE;;AAGtB,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAED,UAAjB;AAA6B,MAAA,QAAQ,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEH,KAAK,CAACI;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,C,CAED;;;GAZSL,U;;KAAAA,U;;AAyCT,eAAeA,UAAf","sourcesContent":["import { Fragment, useState } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport AllTask from '../components/task/AllTask';\r\nimport {MongoClient} from 'mongodb'\r\n\r\nfunction MyCalendar(props){\r\n     const [chosenDate, setChosenDate] = useState(new Date());\r\n\r\n    return (\r\n        <Fragment>\r\n            <Calendar value={chosenDate} onChange={setChosenDate}/>\r\n            <AllTask tasks={props.tasks}/>\r\n        </Fragment>\r\n        \r\n    )\r\n}\r\n\r\n//zamina na getServerSideProps\r\nexport async function getStaticProps(context) {\r\n    \r\n  const taskStartDate = context.params.taskStartDate;\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n  \r\n    const taskCollection = db.collection('tasks');\r\n    const tasks = await taskCollection.find({start_date: chosenDate}).toArray();\r\n  \r\n    client.close()\r\n  \r\n    return {\r\n      props: {\r\n        tasks: tasks.map((task) => ({\r\n          title: task.title,\r\n          priority: task.priority,\r\n          start_date: task.start_date || null,\r\n          complete: task.complete || null,\r\n          id: task._id.toString(),\r\n        })),\r\n      }, \r\n      revalidate: 1\r\n    }\r\n  \r\n  }\r\n\r\n\r\nexport default MyCalendar;"]},"metadata":{},"sourceType":"module"}