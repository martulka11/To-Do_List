{"ast":null,"code":"import _regeneratorRuntime from \"D:/IT/moje_projekty/to-do_list/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"D:/IT/moje_projekty/to-do_list/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\IT\\\\moje_projekty\\\\to-do_list\\\\components\\\\task\\\\TaskDetails.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport classes from './TaskDetils.module.css';\nimport { useRouter } from 'next/router';\nimport { MongoClient } from 'mongodb';\n\nvar TaskDetail = function TaskDetail(props) {\n  _s();\n\n  var router = useRouter();\n  var taskId = router.query.taskId;\n\n  function finishHandler() {\n    return _finishHandler.apply(this, arguments);\n  }\n\n  function _finishHandler() {\n    _finishHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var client, db, taskCollection, tasks;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\n\n            case 2:\n              client = _context.sent;\n              db = client.db();\n              taskCollection = db.collection('tasks');\n              _context.next = 7;\n              return taskCollection.updateOne({\n                _id: taskId\n              }, {\n                complete: true\n              }).toArray();\n\n            case 7:\n              tasks = _context.sent;\n              client.close();\n              return _context.abrupt(\"return\", {\n                props: {\n                  tasks: tasks.map(function (task) {\n                    return {\n                      title: task.title,\n                      priority: task.priority,\n                      start_date: task.start_date || null,\n                      complete: task.complete || null,\n                      id: task._id.toString()\n                    };\n                  })\n                }\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _finishHandler.apply(this, arguments);\n  }\n\n  function getComplete(props) {\n    if (props.complete === true) {\n      return './check.png';\n    }\n\n    return './work-in-progress.png';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.priority\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.start_date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: getComplete(props),\n      alt: \"icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.button,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: finishHandler,\n        children: \"Finish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(TaskDetail, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = TaskDetail;\nexport default TaskDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskDetail\");","map":{"version":3,"sources":["D:/IT/moje_projekty/to-do_list/components/task/TaskDetails.js"],"names":["classes","useRouter","MongoClient","TaskDetail","props","router","taskId","query","finishHandler","connect","client","db","taskCollection","collection","updateOne","_id","complete","toArray","tasks","close","map","task","title","priority","start_date","id","toString","getComplete","container","description","button"],"mappings":";;;;;;;;AAAA,OAAOA,OAAP,MAAoB,yBAApB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,WAAR,QAA0B,SAA1B;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAAA;;AAE1B,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AAF0B,MAGlBK,MAHkB,GAGND,MAAM,CAACE,KAHD,CAGlBD,MAHkB;;AAAA,WAKXE,aALW;AAAA;AAAA;;AAAA;AAAA,8EAK1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEyBN,WAAW,CAACO,OAAZ,CAAoB,8FAApB,CAFzB;;AAAA;AAEUC,cAAAA,MAFV;AAGUC,cAAAA,EAHV,GAGeD,MAAM,CAACC,EAAP,EAHf;AAKUC,cAAAA,cALV,GAK2BD,EAAE,CAACE,UAAH,CAAc,OAAd,CAL3B;AAAA;AAAA,qBAMwBD,cAAc,CAACE,SAAf,CAAyB;AAACC,gBAAAA,GAAG,EAAET;AAAN,eAAzB,EAA0C;AAACU,gBAAAA,QAAQ,EAAE;AAAX,eAA1C,EAA4DC,OAA5D,EANxB;;AAAA;AAMUC,cAAAA,KANV;AAQIR,cAAAA,MAAM,CAACS,KAAP;AARJ,+CAUW;AACHf,gBAAAA,KAAK,EAAE;AACPc,kBAAAA,KAAK,EAAEA,KAAK,CAACE,GAAN,CAAU,UAACC,IAAD;AAAA,2BAAW;AACxBC,sBAAAA,KAAK,EAAED,IAAI,CAACC,KADY;AAExBC,sBAAAA,QAAQ,EAAEF,IAAI,CAACE,QAFS;AAGxBC,sBAAAA,UAAU,EAAEH,IAAI,CAACG,UAAL,IAAmB,IAHP;AAIxBR,sBAAAA,QAAQ,EAAEK,IAAI,CAACL,QAAL,IAAiB,IAJH;AAKxBS,sBAAAA,EAAE,EAAEJ,IAAI,CAACN,GAAL,CAASW,QAAT;AALoB,qBAAX;AAAA,mBAAV;AADA;AADJ,eAVX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAL0B;AAAA;AAAA;;AAgC1B,WAASC,WAAT,CAAqBvB,KAArB,EAA2B;AACvB,QAAGA,KAAK,CAACY,QAAN,KAAmB,IAAtB,EAA2B;AACvB,aAAO,aAAP;AACH;;AACD,WAAO,wBAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAEhB,OAAO,CAAC4B,SAAxB;AAAA,4BACI;AAAA,gBAAKxB,KAAK,CAACkB;AAAX;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAA,gBAAKlB,KAAK,CAACmB;AAAX;AAAA;AAAA;AAAA;AAAA,aAFJ,eAGI;AAAA,gBAAKnB,KAAK,CAACoB;AAAX;AAAA;AAAA;AAAA;AAAA,aAHJ,eAII;AAAK,MAAA,GAAG,EAAEG,WAAW,CAACvB,KAAD,CAArB;AAA8B,MAAA,GAAG,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,aAJJ,eAKI;AAAA,gBAAIA,KAAK,CAACyB;AAAV;AAAA;AAAA;AAAA;AAAA,aALJ,eAMI;AAAK,MAAA,SAAS,EAAE7B,OAAO,CAAC8B,MAAxB;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAEtB,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aANJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAYH,CAnDD;;GAAML,U;UAEaF,S;;;KAFbE,U;AAuDN,eAAeA,UAAf","sourcesContent":["import classes from './TaskDetils.module.css';\r\nimport {useRouter} from 'next/router';\r\nimport {MongoClient} from 'mongodb'\r\n\r\nconst TaskDetail = (props) => {\r\n\r\n    const router = useRouter();\r\n    const { taskId }  = router.query;\r\n    \r\n    async function finishHandler() {\r\n\r\n        const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\r\n        const db = client.db();\r\n\r\n        const taskCollection = db.collection('tasks');\r\n        const tasks = await taskCollection.updateOne({_id: taskId  }, {complete: true}).toArray();\r\n\r\n        client.close()\r\n\r\n        return {\r\n            props: {\r\n            tasks: tasks.map((task) => ({\r\n                title: task.title,\r\n                priority: task.priority,\r\n                start_date: task.start_date || null,\r\n                complete: task.complete || null,\r\n                id: task._id.toString(),\r\n            })),\r\n        }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    \r\n    function getComplete(props){\r\n        if(props.complete === true){\r\n            return './check.png'\r\n        }\r\n        return './work-in-progress.png'\r\n    }\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <h1>{props.title}</h1>\r\n            <h3>{props.priority}</h3>\r\n            <h3>{props.start_date}</h3>\r\n            <img src={getComplete(props)} alt='icon'/>\r\n            <p>{props.description}</p>\r\n            <div className={classes.button}>\r\n                <button onClick={finishHandler}>Finish</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default TaskDetail;"]},"metadata":{},"sourceType":"module"}