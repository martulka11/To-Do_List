{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\IT\\\\moje_projekty\\\\to-do_list\\\\pages\\\\index.js\";\nimport Head from 'next/head';\nimport { Fragment } from 'react';\nimport AllTask from '../components/task/AllTask';\nimport { MongoClient } from 'mongodb';\n\nfunction Home(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AllTask, {\n      tasks: props.tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\n  const db = client.db();\n  const taskCollection = db.collection('tasks');\n  const tasks = await taskCollection.find().toArray();\n  const tasks1 = JSON.parse(JSON.stringify(tasks));\n  client.close();\n  return {\n    props: {\n      tasks: tasks1.map(task => ({\n        title: task.title,\n        priority: task.priority,\n        start_date: task.start_date,\n        complete: task.complete,\n        id: task._id.toString()\n      }))\n    },\n    revalidate: 1\n  };\n}\nexport default Home;\n/*\n<Head>\n        <title>to-do list</title>\n        <meta name=\"description\" content=\"Generated by create next app\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n      props: {\n          meetups: meetups.map((meetup) => ({\n              title: meetup.title,\n              address: meetup.address,\n              image: meetup.image,\n              id: meetup._id.toString(),\n            })),\n      },\n      revalidate: 1\n  }\n  \nconst TASKDATA = [\n    {\n      id: 'm1',\n      title: 'A First Meetup',\n      priority:\n        'high priority',\n      start_date: \"22-01-2022\",\n      complete: false,\n      description: 'This is a first meetup!',\n    },\n    {\n      id: 'm2',\n      title: 'A Second Meetup',\n      priority:\n        'high priority',\n      start_date: \"22-01-2022\",\n      complete: false,\n      description: 'This is a second meetup!',\n    },\n];\n\n}*/","map":{"version":3,"sources":["D:/IT/moje_projekty/to-do_list/pages/index.js"],"names":["Head","Fragment","AllTask","MongoClient","Home","props","tasks","getStaticProps","client","connect","db","taskCollection","collection","find","toArray","tasks1","JSON","parse","stringify","close","map","task","title","priority","start_date","complete","id","_id","toString","revalidate"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAAQC,WAAR,QAA0B,SAA1B;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEA,KAAK,CAACC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AAErC,QAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CAAoB,8FAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,cAAc,GAAGD,EAAE,CAACE,UAAH,CAAc,OAAd,CAAvB;AACA,QAAMN,KAAK,GAAG,MAAMK,cAAc,CAACE,IAAf,GAAsBC,OAAtB,EAApB;AACA,QAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeZ,KAAf,CAAX,CAAf;AAEAE,EAAAA,MAAM,CAACW,KAAP;AAEA,SAAO;AACLd,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAES,MAAM,CAACK,GAAP,CAAYC,IAAD,KAAW;AAC3BC,QAAAA,KAAK,EAAED,IAAI,CAACC,KADe;AAE3BC,QAAAA,QAAQ,EAAEF,IAAI,CAACE,QAFY;AAG3BC,QAAAA,UAAU,EAAEH,IAAI,CAACG,UAHU;AAI3BC,QAAAA,QAAQ,EAAEJ,IAAI,CAACI,QAJY;AAK3BC,QAAAA,EAAE,EAAEL,IAAI,CAACM,GAAL,CAASC,QAAT;AALuB,OAAX,CAAX;AADF,KADF;AAULC,IAAAA,UAAU,EAAE;AAVP,GAAP;AAaD;AACD,eAAezB,IAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Head from 'next/head'\nimport { Fragment } from 'react'\nimport AllTask from '../components/task/AllTask';\nimport {MongoClient} from 'mongodb';\n\nfunction Home(props) {\n  return (\n    <Fragment>\n      <AllTask tasks={props.tasks}/>\n    </Fragment>\n      \n\n  )\n}\n\nexport async function getStaticProps() {\n\n  const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\n  const db = client.db();\n\n  const taskCollection = db.collection('tasks');\n  const tasks = await taskCollection.find().toArray();\n  const tasks1 = JSON.parse(JSON.stringify(tasks))\n\n  client.close()\n\n  return {\n    props: {\n      tasks: tasks1.map((task) => ({\n        title: task.title,\n        priority: task.priority,\n        start_date: task.start_date,\n        complete: task.complete,\n        id: task._id.toString(),\n      })),\n    }, \n    revalidate: 1\n  }\n\n}\nexport default Home;\n\n/*\n<Head>\n        <title>to-do list</title>\n        <meta name=\"description\" content=\"Generated by create next app\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n      props: {\n          meetups: meetups.map((meetup) => ({\n              title: meetup.title,\n              address: meetup.address,\n              image: meetup.image,\n              id: meetup._id.toString(),\n            })),\n      },\n      revalidate: 1\n  }\n  \nconst TASKDATA = [\n    {\n      id: 'm1',\n      title: 'A First Meetup',\n      priority:\n        'high priority',\n      start_date: \"22-01-2022\",\n      complete: false,\n      description: 'This is a first meetup!',\n    },\n    {\n      id: 'm2',\n      title: 'A Second Meetup',\n      priority:\n        'high priority',\n      start_date: \"22-01-2022\",\n      complete: false,\n      description: 'This is a second meetup!',\n    },\n];\n\n}*/\n\n"]},"metadata":{},"sourceType":"module"}