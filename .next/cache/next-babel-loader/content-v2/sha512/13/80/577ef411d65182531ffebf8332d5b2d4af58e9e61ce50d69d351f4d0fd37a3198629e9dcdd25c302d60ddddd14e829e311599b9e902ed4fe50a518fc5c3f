{"ast":null,"code":"import _regeneratorRuntime from \"D:/IT/moje_projekty/to-do_list/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"D:/IT/moje_projekty/to-do_list/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\IT\\\\moje_projekty\\\\to-do_list\\\\pages\\\\new-task.js\",\n    _this = this;\n\nimport AddTask from '../components/task/AddTask';\nimport { useRouter } from 'next/router';\n\nvar NewTaskPage = function NewTaskPage() {\n  //const router = useRouter();\n  function addTaskHandler(_x) {\n    return _addTaskHandler.apply(this, arguments);\n  }\n\n  function _addTaskHandler() {\n    _addTaskHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(enteredTaskData) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(enteredTaskData);\n              /* const response = await fetch('/api/new-task', {\r\n                   method: 'POST',\r\n                   body: JSON.stringify(enteredTaskData),\r\n                   headers: {\r\n                       'Content-Type': 'application/json'\r\n                   }\r\n               });\r\n                 const data = await response.json();\r\n               console.log(data);\r\n                     router.push('/')*/\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _addTaskHandler.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(AddTask, {\n    onAddTask: addTaskHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = NewTaskPage;\nexport default NewTaskPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTaskPage\");","map":{"version":3,"sources":["D:/IT/moje_projekty/to-do_list/pages/new-task.js"],"names":["AddTask","useRouter","NewTaskPage","addTaskHandler","enteredTaskData","console","log"],"mappings":";;;;;;;AAAA,OAAOA,OAAP,MAAoB,4BAApB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB;AADsB,WAGPC,cAHO;AAAA;AAAA;;AAAA;AAAA,+EAGtB,iBAA8BC,eAA9B;AAAA;AAAA;AAAA;AAAA;AACIC,cAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ;AACD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAXI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHsB;AAAA;AAAA;;AAmBtB,sBACI,QAAC,OAAD;AAAS,IAAA,SAAS,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,WADJ;AAGH,CAtBD;;KAAMD,W;AAwBN,eAAeA,WAAf","sourcesContent":["import AddTask from '../components/task/AddTask';\r\nimport { useRouter } from 'next/router';\r\n\r\nconst NewTaskPage = () => {\r\n    //const router = useRouter();\r\n\r\n    async function addTaskHandler(enteredTaskData) {\r\n        console.log(enteredTaskData)\r\n       /* const response = await fetch('/api/new-task', {\r\n            method: 'POST',\r\n            body: JSON.stringify(enteredTaskData),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n\r\n        const data = await response.json();\r\n        console.log(data);\r\n    \r\n        router.push('/')*/\r\n    }\r\n\r\n    return (\r\n        <AddTask onAddTask={addTaskHandler}/>\r\n    )\r\n}\r\n\r\nexport default NewTaskPage;"]},"metadata":{},"sourceType":"module"}