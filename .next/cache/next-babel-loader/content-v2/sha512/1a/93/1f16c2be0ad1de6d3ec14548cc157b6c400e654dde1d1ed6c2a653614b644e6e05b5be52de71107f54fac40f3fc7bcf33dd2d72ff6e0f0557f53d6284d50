{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\IT\\\\moje_projekty\\\\to-do_list\\\\pages\\\\ended-tasks.js\";\nimport { Fragment } from \"react\";\nimport EndedTask from '../components/task/EndedTask';\nimport { MongoClient } from 'mongodb';\n\nconst EndTask = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AllTask, {\n      tasks: props.tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\n  const db = client.db();\n  const taskCollection = db.collection('tasks');\n  const tasks = await taskCollection.find({\n    complete: false\n  }).toArray();\n  client.close();\n  return {\n    props: {\n      tasks: tasks.map(task => ({\n        title: task.title,\n        priority: task.priority,\n        start_date: task.start_date || null,\n        complete: task.complete || null,\n        id: task._id.toString()\n      }))\n    },\n    revalidate: 1\n  };\n}\nexport default EndTask;","map":{"version":3,"sources":["D:/IT/moje_projekty/to-do_list/pages/ended-tasks.js"],"names":["Fragment","EndedTask","MongoClient","EndTask","props","tasks","getStaticProps","client","connect","db","taskCollection","collection","find","complete","toArray","close","map","task","title","priority","start_date","id","_id","toString","revalidate"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,SAAQC,WAAR,QAA0B,SAA1B;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEzB,sBACE,QAAC,QAAD;AAAA,2BACA,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEA,KAAK,CAACC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CARD;;AAWA,OAAO,eAAeC,cAAf,GAAgC;AAEjC,QAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CAAoB,8FAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,cAAc,GAAGD,EAAE,CAACE,UAAH,CAAc,OAAd,CAAvB;AACA,QAAMN,KAAK,GAAG,MAAMK,cAAc,CAACE,IAAf,CAAoB;AAACC,IAAAA,QAAQ,EAAE;AAAX,GAApB,EAAuCC,OAAvC,EAApB;AAEAP,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACLX,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAEA,KAAK,CAACW,GAAN,CAAWC,IAAD,KAAW;AAC1BC,QAAAA,KAAK,EAAED,IAAI,CAACC,KADc;AAE1BC,QAAAA,QAAQ,EAAEF,IAAI,CAACE,QAFW;AAG1BC,QAAAA,UAAU,EAAEH,IAAI,CAACG,UAAL,IAAmB,IAHL;AAI1BP,QAAAA,QAAQ,EAAEI,IAAI,CAACJ,QAAL,IAAiB,IAJD;AAK1BQ,QAAAA,EAAE,EAAEJ,IAAI,CAACK,GAAL,CAASC,QAAT;AALsB,OAAX,CAAV;AADF,KADF;AAULC,IAAAA,UAAU,EAAE;AAVP,GAAP;AAaD;AAEL,eAAerB,OAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport EndedTask from '../components/task/EndedTask'\r\nimport {MongoClient} from 'mongodb'\r\n\r\nconst EndTask = (props) => {\r\n\r\n  return (\r\n    <Fragment>\r\n    <AllTask tasks={props.tasks}/>\r\n  </Fragment>\r\n    \r\n  )\r\n}\r\n\r\n\r\nexport async function getStaticProps() {\r\n    \r\n      const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\r\n      const db = client.db();\r\n    \r\n      const taskCollection = db.collection('tasks');\r\n      const tasks = await taskCollection.find({complete: false}).toArray();\r\n    \r\n      client.close()\r\n    \r\n      return {\r\n        props: {\r\n          tasks: tasks.map((task) => ({\r\n            title: task.title,\r\n            priority: task.priority,\r\n            start_date: task.start_date || null,\r\n            complete: task.complete || null,\r\n            id: task._id.toString(),\r\n          })),\r\n        }, \r\n        revalidate: 1\r\n      }\r\n    \r\n    }\r\n\r\nexport default EndTask"]},"metadata":{},"sourceType":"module"}