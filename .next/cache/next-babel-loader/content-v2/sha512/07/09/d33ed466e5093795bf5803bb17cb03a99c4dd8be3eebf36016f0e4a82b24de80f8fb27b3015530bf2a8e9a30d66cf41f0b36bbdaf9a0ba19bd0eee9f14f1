{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\IT\\\\moje_projekty\\\\to-do_list\\\\components\\\\task\\\\TaskDetails.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport classes from './TaskDetils.module.css';\nimport { useRouter } from 'next/router'; //import {MongoClient} from 'mongodb';\n\nvar TaskDetail = function TaskDetail(props) {\n  _s();\n\n  /* const router = useRouter();\r\n   const { taskId }  = router.query;\r\n   \r\n   async function finishHandler() {\r\n         const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\r\n       const db = client.db();\r\n         const taskCollection = db.collection('tasks');\r\n       const tasks = await taskCollection.updateOne({_id: taskId }, {complete: true}).toArray();\r\n         //findAndModify({})\r\n         client.close()\r\n         return {\r\n           props: {\r\n           tasks: tasks.map((task) => ({\r\n               title: task.title,\r\n               priority: task.priority,\r\n               start_date: task.start_date || null,\r\n               complete: task.complete || null,\r\n               id: task._id.toString(),\r\n           })),\r\n       }\r\n         }\r\n     }\r\n  */\n  var router = useRouter();\n  var taskId = router.query.taskId;\n  console.log(data);\n\n  function finishHandler() {\n    data;\n    props.updatedTaskHandler(data);\n  }\n\n  function getComplete(props) {\n    if (props.complete === true) {\n      return './check.png';\n    }\n\n    return './work-in-progress.png';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.priority\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.start_date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: getComplete(props),\n      alt: \"icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.button,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: finishHandler,\n        children: \"Finish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(TaskDetail, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = TaskDetail;\nexport default TaskDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskDetail\");","map":{"version":3,"sources":["D:/IT/moje_projekty/to-do_list/components/task/TaskDetails.js"],"names":["classes","useRouter","TaskDetail","props","router","taskId","query","console","log","data","finishHandler","updatedTaskHandler","getComplete","complete","container","title","priority","start_date","description","button"],"mappings":";;;;;;AAAA,OAAOA,OAAP,MAAoB,yBAApB;AACA,SAAQC,SAAR,QAAwB,aAAxB,C,CACA;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAAA;;AAE3B;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUQ,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AAlCsB,MAmCdI,MAnCc,GAmCFD,MAAM,CAACE,KAnCL,CAmCdD,MAnCc;AAqCtBE,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;;AAEA,WAASC,aAAT,GAAyB;AAEzBD,IAAAA,IAAI;AAEJN,IAAAA,KAAK,CAACQ,kBAAN,CAAyBF,IAAzB;AACH;;AAGD,WAASG,WAAT,CAAqBT,KAArB,EAA2B;AACvB,QAAGA,KAAK,CAACU,QAAN,KAAmB,IAAtB,EAA2B;AACvB,aAAO,aAAP;AACH;;AACD,WAAO,wBAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAEb,OAAO,CAACc,SAAxB;AAAA,4BACI;AAAA,gBAAKX,KAAK,CAACY;AAAX;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAA,gBAAKZ,KAAK,CAACa;AAAX;AAAA;AAAA;AAAA;AAAA,aAFJ,eAGI;AAAA,gBAAKb,KAAK,CAACc;AAAX;AAAA;AAAA;AAAA;AAAA,aAHJ,eAII;AAAK,MAAA,GAAG,EAAEL,WAAW,CAACT,KAAD,CAArB;AAA8B,MAAA,GAAG,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,aAJJ,eAKI;AAAA,gBAAIA,KAAK,CAACe;AAAV;AAAA;AAAA;AAAA;AAAA,aALJ,eAMI;AAAK,MAAA,SAAS,EAAElB,OAAO,CAACmB,MAAxB;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAET,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aANJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAYH,CAlED;;GAAMR,U;UAkCiBD,S;;;KAlCjBC,U;AAsEN,eAAeA,UAAf","sourcesContent":["import classes from './TaskDetils.module.css';\r\nimport {useRouter} from 'next/router';\r\n//import {MongoClient} from 'mongodb';\r\n\r\nconst TaskDetail = (props) => {\r\n\r\n   /* const router = useRouter();\r\n    const { taskId }  = router.query;\r\n    \r\n    async function finishHandler() {\r\n\r\n        const client = await MongoClient.connect('mongodb+srv://motylek:marta1999@cluster0.3tna7.mongodb.net/tasks?retryWrites=true&w=majority');\r\n        const db = client.db();\r\n\r\n        const taskCollection = db.collection('tasks');\r\n        const tasks = await taskCollection.updateOne({_id: taskId }, {complete: true}).toArray();\r\n\r\n        //findAndModify({})\r\n\r\n        client.close()\r\n\r\n        return {\r\n            props: {\r\n            tasks: tasks.map((task) => ({\r\n                title: task.title,\r\n                priority: task.priority,\r\n                start_date: task.start_date || null,\r\n                complete: task.complete || null,\r\n                id: task._id.toString(),\r\n            })),\r\n        }\r\n\r\n        }\r\n\r\n    }\r\n*/\r\n\r\n\r\n        const router = useRouter();\r\n        const { taskId }  = router.query;\r\n\r\n        console.log(data)\r\n\r\n        function finishHandler() {\r\n\r\n        data \r\n\r\n        props.updatedTaskHandler(data)\r\n    }\r\n\r\n    \r\n    function getComplete(props){\r\n        if(props.complete === true){\r\n            return './check.png'\r\n        }\r\n        return './work-in-progress.png'\r\n    }\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <h1>{props.title}</h1>\r\n            <h3>{props.priority}</h3>\r\n            <h3>{props.start_date}</h3>\r\n            <img src={getComplete(props)} alt='icon'/>\r\n            <p>{props.description}</p>\r\n            <div className={classes.button}>\r\n                <button onClick={finishHandler}>Finish</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default TaskDetail;"]},"metadata":{},"sourceType":"module"}